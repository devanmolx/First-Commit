generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int            @id @default(autoincrement())
  name             String
  email            String         @unique
  profilePicture   String
  githubId         String         @unique
  username         String
  githubUrl        String
  favoriteProjects UserProject[]
  activities       UserActivity[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model Project {
  id          Int           @id @default(autoincrement())
  url         String        @unique
  description String?
  issues      Issue[]
  favoritedBy UserProject[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model UserProject {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  createdAt DateTime @default(now())

  @@unique([userId, projectId])
}

model Issue {
  id          Int      @id @default(autoincrement())
  url         String
  repoUrl     String
  issueNo     Int
  title       String
  description String?
  createdBy   String
  createdAt   DateTime
  updatedAt   DateTime @updatedAt
  tags        String[]
  Project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   Int
}

model UserActivity {
  id        Int      @id @default(autoincrement())
  eventId   String   @unique
  userId    Int
  repoName  String
  repoUrl   String
  type      String
  action    String
  details   String?
  metadata  Json?
  createdAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}
